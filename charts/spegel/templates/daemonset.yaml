apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "spegel.fullname" . }}
  labels:
    {{- include "spegel.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "spegel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spegel.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spegel.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.spegel.bootstrap.initContainer.enabled }}
      initContainers:
        - name: bootstrap
          image: "{{ required "Image repository needs to be set when using bootstrap init container." .Values.spegel.bootstrap.initContainer.image.repository }}:{{ .Values.spegel.bootstrap.initContainer.image.tag }}"
          imagePullPolicy: {{ .Values.spegel.bootstrap.initContainer.image.pullPolicy }}
          command:
            - /bin/sh 
            - -c
          args:
            - mkdir {{ .Values.spegel.containerdRegistryConfigPath }}/{{ include "spegel.bootstrapRegistry" . }}; cp /tmp/hosts.toml {{ .Values.spegel.containerdRegistryConfigPath }}/{{ include "spegel.bootstrapRegistry" . }}/hosts.toml;
          volumeMounts:
            - name: containerd-config
              mountPath: {{ .Values.spegel.containerdRegistryConfigPath }}
            - name: bootstrap-mirror
              mountPath: /tmp
      {{- end }}
      containers:
      - name: registry
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - --registry-addr=:{{ .Values.service.registry.port }}
          - --router-addr=:{{ .Values.service.router.port }}
          - --metrics-addr=:{{ .Values.service.metrics.port }}
          - --containerd-sock={{ .Values.spegel.containerdSock }}
          - --containerd-namespace={{ .Values.spegel.containerdNamespace }}
          - --containerd-registry-config-path={{ .Values.spegel.containerdRegistryConfigPath }}
          - --containerd-mirror-add={{ .Values.spegel.containerdMirrorAdd }}
          - --containerd-mirror-remove={{ .Values.spegel.containerdMirrorRemove }}
          {{- with .Values.spegel.kubeconfigPath }}
          - --kubeconfig-path={{ . }}
          {{- end }}
          - --leader-election-namespace={{ .Release.Namespace }}
          - --leader-election-name={{ .Release.Namespace }}-leader-election
          {{- with .Values.spegel.imageFilter }}
          - --image-filter
          - {{ . | quote }}
          {{- end }}
          {{- with .Values.spegel.mirrorRegistries }}
          - --mirror-registries
          {{- range . }}
          - {{ . | quote }}
          {{- end }}    
          {{- end }}
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        ports:
          - name: registry
            containerPort: {{ .Values.service.registry.port }}
            hostPort: {{ .Values.service.registry.port }}
            hostIP: "127.0.0.1"
            protocol: TCP
          - name: router
            containerPort: {{ .Values.service.router.port }}
            protocol: TCP
          - name: metrics
            containerPort: {{ .Values.service.metrics.port }}
            protocol: TCP
        # Startup may take a bit longer on startup as Pods need to find each other.
        # This is why the startup proben is a bit more forgiving, while hitting the endpoint more often.
        startupProbe:
          periodSeconds: 1
          failureThreshold: 60
          httpGet:
            path: /healthz
            port: registry
        readinessProbe:
          httpGet:
            path: /healthz
            port: registry
        volumeMounts:
          - name: containerd-sock
            mountPath: {{ .Values.spegel.containerdSock }}
          - name: containerd-config
            mountPath: {{ .Values.spegel.containerdRegistryConfigPath }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      volumes:
        - name: containerd-sock
          hostPath:
            path: {{ .Values.spegel.containerdSock }}
        - name: containerd-config
          hostPath:
            path: {{ .Values.spegel.containerdRegistryConfigPath }}
            type: DirectoryOrCreate
        {{- if .Values.spegel.bootstrap.initContainer.enabled }}
        - name: bootstrap-mirror
          configMap:
            name: {{ include "spegel.fullname" . }}-bootstrap
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
